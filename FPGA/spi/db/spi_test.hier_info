|spi_test
MISO <= MISO.DB_MAX_OUTPUT_PORT_TYPE
SCLK_IN => spi_slave:inst10.sclk
SCLK_IN => spi_slave:inst9.sclk
RESET_BUTTON => spi_slave:inst10.reset_n
RESET_BUTTON => lcd_controller:inst.reset_n
RESET_BUTTON => spi_slave:inst9.reset_n
LCD_CS_N => spi_slave:inst10.ss_n
MOSI_IN => spi_slave:inst10.mosi
MOSI_IN => spi_slave:inst9.mosi
X50MHz_CLK => lcd_controller:inst.clk
X50MHz_CLK => inst5.CLK
X50MHz_CLK => spi_PLL:inst14.inclk0
CS_N => spi_slave:inst9.ss_n
Switch_0 => spi_slave:inst9.tx_load_data[0]
Switch_1 => spi_slave:inst9.tx_load_data[1]
Switch_2 => spi_slave:inst9.tx_load_data[2]
Switch_3 => spi_slave:inst9.tx_load_data[3]
LED_0 <= rx_data[0].DB_MAX_OUTPUT_PORT_TYPE
LED_1 <= rx_data[1].DB_MAX_OUTPUT_PORT_TYPE
LED_2 <= rx_data[2].DB_MAX_OUTPUT_PORT_TYPE
LED_4 <= rx_data[4].DB_MAX_OUTPUT_PORT_TYPE
LED_3 <= rx_data[3].DB_MAX_OUTPUT_PORT_TYPE
LED_5 <= rx_data[5].DB_MAX_OUTPUT_PORT_TYPE
LED_6 <= rx_data[6].DB_MAX_OUTPUT_PORT_TYPE
LED_7 <= rx_data[7].DB_MAX_OUTPUT_PORT_TYPE
LCD_D7 <= lcd_data_OP[7].DB_MAX_OUTPUT_PORT_TYPE
LCD_D6 <= lcd_data_OP[6].DB_MAX_OUTPUT_PORT_TYPE
LCD_D5 <= lcd_data_OP[5].DB_MAX_OUTPUT_PORT_TYPE
LCD_D4 <= lcd_data_OP[4].DB_MAX_OUTPUT_PORT_TYPE
LCD_D3 <= lcd_data_OP[3].DB_MAX_OUTPUT_PORT_TYPE
LCD_D2 <= lcd_data_OP[2].DB_MAX_OUTPUT_PORT_TYPE
LCD_D1 <= lcd_data_OP[1].DB_MAX_OUTPUT_PORT_TYPE
LCD_D0 <= lcd_data_OP[0].DB_MAX_OUTPUT_PORT_TYPE
LCD_RW <= lcd_controller:inst.rw
LCD_RS <= lcd_controller:inst.rs
LCD_E <= lcd_controller:inst.e
CLOCK_1_OP <= CLOCK_1.DB_MAX_OUTPUT_PORT_TYPE
ADC_CS_N <= adc_controller:inst11.CS_N
ADC_SDAT => adc_controller:inst11.ADC_IN_DATA
ADC_SADDR <= adc_controller:inst11.SADDR
ADC_SCLK <= adc_controller:inst11.SCLK
OUT1 <= FIFO_READ[0].DB_MAX_OUTPUT_PORT_TYPE
CLK => fifo_controller:inst17.CLK
CLR => fifo_controller:inst17.CLR
READ_REQ => fifo_controller:inst17.READ_REQ
WRITE_REQ => fifo_controller:inst17.WRITE_REQ
IN1 => fifo_controller:inst17.DATA_WRITE[0]
IN2 => fifo_controller:inst17.DATA_WRITE[1]
IN3 => fifo_controller:inst17.DATA_WRITE[2]
OUT2 <= FIFO_READ[1].DB_MAX_OUTPUT_PORT_TYPE
OUT3 <= FIFO_READ[2].DB_MAX_OUTPUT_PORT_TYPE
SPACE1 <= SPACE_AVAILABLE[0].DB_MAX_OUTPUT_PORT_TYPE
SPACE2 <= SPACE_AVAILABLE[1].DB_MAX_OUTPUT_PORT_TYPE
SPACE3 <= SPACE_AVAILABLE[2].DB_MAX_OUTPUT_PORT_TYPE
ADC_CS => ~NO_FANOUT~


|spi_test|spi_slave:inst10
sclk => miso~reg0.CLK
sclk => miso~en.CLK
sclk => tx_buf[0].CLK
sclk => tx_buf[1].CLK
sclk => tx_buf[2].CLK
sclk => tx_buf[3].CLK
sclk => tx_buf[4].CLK
sclk => tx_buf[5].CLK
sclk => tx_buf[6].CLK
sclk => tx_buf[7].CLK
sclk => tx_buf[8].CLK
sclk => tx_buf[9].CLK
sclk => tx_buf[10].CLK
sclk => tx_buf[11].CLK
sclk => tx_buf[12].CLK
sclk => tx_buf[13].CLK
sclk => tx_buf[14].CLK
sclk => tx_buf[15].CLK
sclk => bit_cnt[0].CLK
sclk => bit_cnt[1].CLK
sclk => bit_cnt[2].CLK
sclk => bit_cnt[3].CLK
sclk => bit_cnt[4].CLK
sclk => bit_cnt[5].CLK
sclk => bit_cnt[6].CLK
sclk => bit_cnt[7].CLK
sclk => bit_cnt[8].CLK
sclk => bit_cnt[9].CLK
sclk => bit_cnt[10].CLK
sclk => bit_cnt[11].CLK
sclk => bit_cnt[12].CLK
sclk => bit_cnt[13].CLK
sclk => bit_cnt[14].CLK
sclk => bit_cnt[15].CLK
sclk => bit_cnt[16].CLK
sclk => bit_cnt[17].CLK
sclk => bit_cnt[18].CLK
sclk => bit_cnt[19].CLK
sclk => bit_cnt[20].CLK
sclk => bit_cnt[21].CLK
sclk => bit_cnt[22].CLK
sclk => bit_cnt[23].CLK
sclk => bit_cnt[24].CLK
sclk => trdy~reg0.CLK
sclk => rrdy~reg0.CLK
sclk => roe~reg0.CLK
sclk => rd_add.CLK
sclk => wr_add.CLK
sclk => rx_buf[15].CLK
sclk => rx_buf[14].CLK
sclk => rx_buf[13].CLK
sclk => rx_buf[12].CLK
sclk => rx_buf[11].CLK
sclk => rx_buf[10].CLK
sclk => rx_buf[9].CLK
sclk => rx_buf[8].CLK
sclk => rx_buf[7].CLK
sclk => rx_buf[6].CLK
sclk => rx_buf[5].CLK
sclk => rx_buf[4].CLK
sclk => rx_buf[3].CLK
sclk => rx_buf[2].CLK
sclk => rx_buf[1].CLK
sclk => rx_buf[0].CLK
reset_n => tx_buf[0].IN1
reset_n => rx_data[0]$latch.ACLR
reset_n => rx_data[1]$latch.ACLR
reset_n => rx_data[2]$latch.ACLR
reset_n => rx_data[3]$latch.ACLR
reset_n => rx_data[4]$latch.ACLR
reset_n => rx_data[5]$latch.ACLR
reset_n => rx_data[6]$latch.ACLR
reset_n => rx_data[7]$latch.ACLR
reset_n => rx_data[8]$latch.ACLR
reset_n => rx_data[9]$latch.ACLR
reset_n => rx_data[10]$latch.ACLR
reset_n => rx_data[11]$latch.ACLR
reset_n => rx_data[12]$latch.ACLR
reset_n => rx_data[13]$latch.ACLR
reset_n => rx_data[14]$latch.ACLR
reset_n => rx_data[15]$latch.ACLR
reset_n => process_1.IN1
reset_n => process_1.IN1
reset_n => process_1.IN1
reset_n => process_0.IN0
reset_n => tx_buf[0].ACLR
reset_n => tx_buf[1].ACLR
reset_n => tx_buf[2].ACLR
reset_n => tx_buf[3].ACLR
reset_n => tx_buf[4].ACLR
reset_n => tx_buf[5].ACLR
reset_n => tx_buf[6].ACLR
reset_n => tx_buf[7].ACLR
reset_n => tx_buf[8].ACLR
reset_n => tx_buf[9].ACLR
reset_n => tx_buf[10].ACLR
reset_n => tx_buf[11].ACLR
reset_n => tx_buf[12].ACLR
reset_n => tx_buf[13].ACLR
reset_n => tx_buf[14].ACLR
reset_n => tx_buf[15].ACLR
reset_n => rx_buf[0].ACLR
reset_n => rx_buf[1].ACLR
reset_n => rx_buf[2].ACLR
reset_n => rx_buf[3].ACLR
reset_n => rx_buf[4].ACLR
reset_n => rx_buf[5].ACLR
reset_n => rx_buf[6].ACLR
reset_n => rx_buf[7].ACLR
reset_n => rx_buf[8].ACLR
reset_n => rx_buf[9].ACLR
reset_n => rx_buf[10].ACLR
reset_n => rx_buf[11].ACLR
reset_n => rx_buf[12].ACLR
reset_n => rx_buf[13].ACLR
reset_n => rx_buf[14].ACLR
reset_n => rx_buf[15].ACLR
ss_n => process_0.IN1
ss_n => process_1.IN0
ss_n => process_1.IN1
ss_n => process_1.IN1
ss_n => process_1.IN0
ss_n => process_1.IN0
ss_n => busy.DATAIN
mosi => roe.DATAB
mosi => rrdy.DATAB
mosi => trdy.DATAB
mosi => rd_add.DATAIN
mosi => wr_add.DATAIN
mosi => rx_buf[15].DATAIN
mosi => rx_buf[14].DATAIN
mosi => rx_buf[13].DATAIN
mosi => rx_buf[12].DATAIN
mosi => rx_buf[11].DATAIN
mosi => rx_buf[10].DATAIN
mosi => rx_buf[9].DATAIN
mosi => rx_buf[8].DATAIN
mosi => rx_buf[7].DATAIN
mosi => rx_buf[6].DATAIN
mosi => rx_buf[5].DATAIN
mosi => rx_buf[4].DATAIN
mosi => rx_buf[3].DATAIN
mosi => rx_buf[2].DATAIN
mosi => rx_buf[1].DATAIN
mosi => rx_buf[0].DATAIN
rx_req => process_1.IN1
rx_req => process_1.IN1
st_load_en => process_1.IN1
st_load_en => process_1.IN0
st_load_en => process_1.IN0
st_load_trdy => process_1.IN1
st_load_trdy => process_1.IN1
st_load_rrdy => process_1.IN1
st_load_rrdy => process_1.IN1
st_load_roe => process_1.IN1
st_load_roe => process_1.IN1
tx_load_en => process_1.IN1
tx_load_en => process_1.IN1
tx_load_data[0] => tx_buf[0].ADATA
tx_load_data[1] => tx_buf[1].ADATA
tx_load_data[2] => tx_buf[2].ADATA
tx_load_data[3] => tx_buf[3].ADATA
tx_load_data[4] => tx_buf[4].ADATA
tx_load_data[5] => tx_buf[5].ADATA
tx_load_data[6] => tx_buf[6].ADATA
tx_load_data[7] => tx_buf[7].ADATA
tx_load_data[8] => tx_buf[8].ADATA
tx_load_data[9] => tx_buf[9].ADATA
tx_load_data[10] => tx_buf[10].ADATA
tx_load_data[11] => tx_buf[11].ADATA
tx_load_data[12] => tx_buf[12].ADATA
tx_load_data[13] => tx_buf[13].ADATA
tx_load_data[14] => tx_buf[14].ADATA
tx_load_data[15] => tx_buf[15].ADATA
trdy <= trdy~reg0.DB_MAX_OUTPUT_PORT_TYPE
rrdy <= rrdy~reg0.DB_MAX_OUTPUT_PORT_TYPE
roe <= roe~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_data[0] <= rx_data[0]$latch.DB_MAX_OUTPUT_PORT_TYPE
rx_data[1] <= rx_data[1]$latch.DB_MAX_OUTPUT_PORT_TYPE
rx_data[2] <= rx_data[2]$latch.DB_MAX_OUTPUT_PORT_TYPE
rx_data[3] <= rx_data[3]$latch.DB_MAX_OUTPUT_PORT_TYPE
rx_data[4] <= rx_data[4]$latch.DB_MAX_OUTPUT_PORT_TYPE
rx_data[5] <= rx_data[5]$latch.DB_MAX_OUTPUT_PORT_TYPE
rx_data[6] <= rx_data[6]$latch.DB_MAX_OUTPUT_PORT_TYPE
rx_data[7] <= rx_data[7]$latch.DB_MAX_OUTPUT_PORT_TYPE
rx_data[8] <= rx_data[8]$latch.DB_MAX_OUTPUT_PORT_TYPE
rx_data[9] <= rx_data[9]$latch.DB_MAX_OUTPUT_PORT_TYPE
rx_data[10] <= rx_data[10]$latch.DB_MAX_OUTPUT_PORT_TYPE
rx_data[11] <= rx_data[11]$latch.DB_MAX_OUTPUT_PORT_TYPE
rx_data[12] <= rx_data[12]$latch.DB_MAX_OUTPUT_PORT_TYPE
rx_data[13] <= rx_data[13]$latch.DB_MAX_OUTPUT_PORT_TYPE
rx_data[14] <= rx_data[14]$latch.DB_MAX_OUTPUT_PORT_TYPE
rx_data[15] <= rx_data[15]$latch.DB_MAX_OUTPUT_PORT_TYPE
busy <= ss_n.DB_MAX_OUTPUT_PORT_TYPE
miso <= miso.DB_MAX_OUTPUT_PORT_TYPE


|spi_test|lcd_controller:inst
clk => e~reg0.CLK
clk => lcd_data[0]~reg0.CLK
clk => lcd_data[1]~reg0.CLK
clk => lcd_data[2]~reg0.CLK
clk => lcd_data[3]~reg0.CLK
clk => lcd_data[4]~reg0.CLK
clk => lcd_data[5]~reg0.CLK
clk => lcd_data[6]~reg0.CLK
clk => lcd_data[7]~reg0.CLK
clk => rw~reg0.CLK
clk => rs~reg0.CLK
clk => busy~reg0.CLK
clk => clk_count[0].CLK
clk => clk_count[1].CLK
clk => clk_count[2].CLK
clk => clk_count[3].CLK
clk => clk_count[4].CLK
clk => clk_count[5].CLK
clk => clk_count[6].CLK
clk => clk_count[7].CLK
clk => clk_count[8].CLK
clk => clk_count[9].CLK
clk => clk_count[10].CLK
clk => clk_count[11].CLK
clk => clk_count[12].CLK
clk => clk_count[13].CLK
clk => clk_count[14].CLK
clk => clk_count[15].CLK
clk => clk_count[16].CLK
clk => clk_count[17].CLK
clk => clk_count[18].CLK
clk => clk_count[19].CLK
clk => clk_count[20].CLK
clk => clk_count[21].CLK
clk => clk_count[22].CLK
clk => clk_count[23].CLK
clk => clk_count[24].CLK
clk => clk_count[25].CLK
clk => clk_count[26].CLK
clk => clk_count[27].CLK
clk => clk_count[28].CLK
clk => clk_count[29].CLK
clk => clk_count[30].CLK
clk => clk_count[31].CLK
clk => state~1.DATAIN
reset_n => state.OUTPUTSELECT
reset_n => state.OUTPUTSELECT
reset_n => state.OUTPUTSELECT
reset_n => state.OUTPUTSELECT
lcd_enable => rs.OUTPUTSELECT
lcd_enable => rw.OUTPUTSELECT
lcd_enable => lcd_data.OUTPUTSELECT
lcd_enable => lcd_data.OUTPUTSELECT
lcd_enable => lcd_data.OUTPUTSELECT
lcd_enable => lcd_data.OUTPUTSELECT
lcd_enable => lcd_data.OUTPUTSELECT
lcd_enable => lcd_data.OUTPUTSELECT
lcd_enable => lcd_data.OUTPUTSELECT
lcd_enable => lcd_data.OUTPUTSELECT
lcd_enable => Selector0.IN3
lcd_enable => Selector35.IN3
lcd_enable => Selector34.IN2
lcd_bus[0] => lcd_data.DATAB
lcd_bus[1] => lcd_data.DATAB
lcd_bus[2] => lcd_data.DATAB
lcd_bus[3] => lcd_data.DATAB
lcd_bus[4] => lcd_data.DATAB
lcd_bus[5] => lcd_data.DATAB
lcd_bus[6] => lcd_data.DATAB
lcd_bus[7] => lcd_data.DATAB
lcd_bus[8] => rw.DATAB
lcd_bus[9] => rs.DATAB
busy <= busy~reg0.DB_MAX_OUTPUT_PORT_TYPE
rw <= rw~reg0.DB_MAX_OUTPUT_PORT_TYPE
rs <= rs~reg0.DB_MAX_OUTPUT_PORT_TYPE
e <= e~reg0.DB_MAX_OUTPUT_PORT_TYPE
lcd_data[0] <= lcd_data[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
lcd_data[1] <= lcd_data[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
lcd_data[2] <= lcd_data[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
lcd_data[3] <= lcd_data[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
lcd_data[4] <= lcd_data[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
lcd_data[5] <= lcd_data[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
lcd_data[6] <= lcd_data[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
lcd_data[7] <= lcd_data[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|spi_test|spi_slave:inst9
sclk => miso~reg0.CLK
sclk => miso~en.CLK
sclk => tx_buf[0].CLK
sclk => tx_buf[1].CLK
sclk => tx_buf[2].CLK
sclk => tx_buf[3].CLK
sclk => tx_buf[4].CLK
sclk => tx_buf[5].CLK
sclk => tx_buf[6].CLK
sclk => tx_buf[7].CLK
sclk => tx_buf[8].CLK
sclk => tx_buf[9].CLK
sclk => tx_buf[10].CLK
sclk => tx_buf[11].CLK
sclk => tx_buf[12].CLK
sclk => tx_buf[13].CLK
sclk => tx_buf[14].CLK
sclk => tx_buf[15].CLK
sclk => bit_cnt[0].CLK
sclk => bit_cnt[1].CLK
sclk => bit_cnt[2].CLK
sclk => bit_cnt[3].CLK
sclk => bit_cnt[4].CLK
sclk => bit_cnt[5].CLK
sclk => bit_cnt[6].CLK
sclk => bit_cnt[7].CLK
sclk => bit_cnt[8].CLK
sclk => bit_cnt[9].CLK
sclk => bit_cnt[10].CLK
sclk => bit_cnt[11].CLK
sclk => bit_cnt[12].CLK
sclk => bit_cnt[13].CLK
sclk => bit_cnt[14].CLK
sclk => bit_cnt[15].CLK
sclk => bit_cnt[16].CLK
sclk => bit_cnt[17].CLK
sclk => bit_cnt[18].CLK
sclk => bit_cnt[19].CLK
sclk => bit_cnt[20].CLK
sclk => bit_cnt[21].CLK
sclk => bit_cnt[22].CLK
sclk => bit_cnt[23].CLK
sclk => bit_cnt[24].CLK
sclk => trdy~reg0.CLK
sclk => rrdy~reg0.CLK
sclk => roe~reg0.CLK
sclk => rd_add.CLK
sclk => wr_add.CLK
sclk => rx_buf[15].CLK
sclk => rx_buf[14].CLK
sclk => rx_buf[13].CLK
sclk => rx_buf[12].CLK
sclk => rx_buf[11].CLK
sclk => rx_buf[10].CLK
sclk => rx_buf[9].CLK
sclk => rx_buf[8].CLK
sclk => rx_buf[7].CLK
sclk => rx_buf[6].CLK
sclk => rx_buf[5].CLK
sclk => rx_buf[4].CLK
sclk => rx_buf[3].CLK
sclk => rx_buf[2].CLK
sclk => rx_buf[1].CLK
sclk => rx_buf[0].CLK
reset_n => tx_buf[0].IN1
reset_n => rx_data[0]$latch.ACLR
reset_n => rx_data[1]$latch.ACLR
reset_n => rx_data[2]$latch.ACLR
reset_n => rx_data[3]$latch.ACLR
reset_n => rx_data[4]$latch.ACLR
reset_n => rx_data[5]$latch.ACLR
reset_n => rx_data[6]$latch.ACLR
reset_n => rx_data[7]$latch.ACLR
reset_n => rx_data[8]$latch.ACLR
reset_n => rx_data[9]$latch.ACLR
reset_n => rx_data[10]$latch.ACLR
reset_n => rx_data[11]$latch.ACLR
reset_n => rx_data[12]$latch.ACLR
reset_n => rx_data[13]$latch.ACLR
reset_n => rx_data[14]$latch.ACLR
reset_n => rx_data[15]$latch.ACLR
reset_n => process_1.IN1
reset_n => process_1.IN1
reset_n => process_1.IN1
reset_n => process_0.IN0
reset_n => tx_buf[0].ACLR
reset_n => tx_buf[1].ACLR
reset_n => tx_buf[2].ACLR
reset_n => tx_buf[3].ACLR
reset_n => tx_buf[4].ACLR
reset_n => tx_buf[5].ACLR
reset_n => tx_buf[6].ACLR
reset_n => tx_buf[7].ACLR
reset_n => tx_buf[8].ACLR
reset_n => tx_buf[9].ACLR
reset_n => tx_buf[10].ACLR
reset_n => tx_buf[11].ACLR
reset_n => tx_buf[12].ACLR
reset_n => tx_buf[13].ACLR
reset_n => tx_buf[14].ACLR
reset_n => tx_buf[15].ACLR
reset_n => rx_buf[0].ACLR
reset_n => rx_buf[1].ACLR
reset_n => rx_buf[2].ACLR
reset_n => rx_buf[3].ACLR
reset_n => rx_buf[4].ACLR
reset_n => rx_buf[5].ACLR
reset_n => rx_buf[6].ACLR
reset_n => rx_buf[7].ACLR
reset_n => rx_buf[8].ACLR
reset_n => rx_buf[9].ACLR
reset_n => rx_buf[10].ACLR
reset_n => rx_buf[11].ACLR
reset_n => rx_buf[12].ACLR
reset_n => rx_buf[13].ACLR
reset_n => rx_buf[14].ACLR
reset_n => rx_buf[15].ACLR
ss_n => process_0.IN1
ss_n => process_1.IN0
ss_n => process_1.IN1
ss_n => process_1.IN1
ss_n => process_1.IN0
ss_n => process_1.IN0
ss_n => busy.DATAIN
mosi => roe.DATAB
mosi => rrdy.DATAB
mosi => trdy.DATAB
mosi => rd_add.DATAIN
mosi => wr_add.DATAIN
mosi => rx_buf[15].DATAIN
mosi => rx_buf[14].DATAIN
mosi => rx_buf[13].DATAIN
mosi => rx_buf[12].DATAIN
mosi => rx_buf[11].DATAIN
mosi => rx_buf[10].DATAIN
mosi => rx_buf[9].DATAIN
mosi => rx_buf[8].DATAIN
mosi => rx_buf[7].DATAIN
mosi => rx_buf[6].DATAIN
mosi => rx_buf[5].DATAIN
mosi => rx_buf[4].DATAIN
mosi => rx_buf[3].DATAIN
mosi => rx_buf[2].DATAIN
mosi => rx_buf[1].DATAIN
mosi => rx_buf[0].DATAIN
rx_req => process_1.IN1
rx_req => process_1.IN1
st_load_en => process_1.IN1
st_load_en => process_1.IN0
st_load_en => process_1.IN0
st_load_trdy => process_1.IN1
st_load_trdy => process_1.IN1
st_load_rrdy => process_1.IN1
st_load_rrdy => process_1.IN1
st_load_roe => process_1.IN1
st_load_roe => process_1.IN1
tx_load_en => process_1.IN1
tx_load_en => process_1.IN1
tx_load_data[0] => tx_buf[0].ADATA
tx_load_data[1] => tx_buf[1].ADATA
tx_load_data[2] => tx_buf[2].ADATA
tx_load_data[3] => tx_buf[3].ADATA
tx_load_data[4] => tx_buf[4].ADATA
tx_load_data[5] => tx_buf[5].ADATA
tx_load_data[6] => tx_buf[6].ADATA
tx_load_data[7] => tx_buf[7].ADATA
tx_load_data[8] => tx_buf[8].ADATA
tx_load_data[9] => tx_buf[9].ADATA
tx_load_data[10] => tx_buf[10].ADATA
tx_load_data[11] => tx_buf[11].ADATA
tx_load_data[12] => tx_buf[12].ADATA
tx_load_data[13] => tx_buf[13].ADATA
tx_load_data[14] => tx_buf[14].ADATA
tx_load_data[15] => tx_buf[15].ADATA
trdy <= trdy~reg0.DB_MAX_OUTPUT_PORT_TYPE
rrdy <= rrdy~reg0.DB_MAX_OUTPUT_PORT_TYPE
roe <= roe~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_data[0] <= rx_data[0]$latch.DB_MAX_OUTPUT_PORT_TYPE
rx_data[1] <= rx_data[1]$latch.DB_MAX_OUTPUT_PORT_TYPE
rx_data[2] <= rx_data[2]$latch.DB_MAX_OUTPUT_PORT_TYPE
rx_data[3] <= rx_data[3]$latch.DB_MAX_OUTPUT_PORT_TYPE
rx_data[4] <= rx_data[4]$latch.DB_MAX_OUTPUT_PORT_TYPE
rx_data[5] <= rx_data[5]$latch.DB_MAX_OUTPUT_PORT_TYPE
rx_data[6] <= rx_data[6]$latch.DB_MAX_OUTPUT_PORT_TYPE
rx_data[7] <= rx_data[7]$latch.DB_MAX_OUTPUT_PORT_TYPE
rx_data[8] <= rx_data[8]$latch.DB_MAX_OUTPUT_PORT_TYPE
rx_data[9] <= rx_data[9]$latch.DB_MAX_OUTPUT_PORT_TYPE
rx_data[10] <= rx_data[10]$latch.DB_MAX_OUTPUT_PORT_TYPE
rx_data[11] <= rx_data[11]$latch.DB_MAX_OUTPUT_PORT_TYPE
rx_data[12] <= rx_data[12]$latch.DB_MAX_OUTPUT_PORT_TYPE
rx_data[13] <= rx_data[13]$latch.DB_MAX_OUTPUT_PORT_TYPE
rx_data[14] <= rx_data[14]$latch.DB_MAX_OUTPUT_PORT_TYPE
rx_data[15] <= rx_data[15]$latch.DB_MAX_OUTPUT_PORT_TYPE
busy <= ss_n.DB_MAX_OUTPUT_PORT_TYPE
miso <= miso.DB_MAX_OUTPUT_PORT_TYPE


|spi_test|spi_PLL:inst14
inclk0 => altpll:altpll_component.inclk[0]
c0 <= altpll:altpll_component.clk[0]


|spi_test|spi_PLL:inst14|altpll:altpll_component
inclk[0] => spi_PLL_altpll:auto_generated.inclk[0]
inclk[1] => spi_PLL_altpll:auto_generated.inclk[1]
fbin => ~NO_FANOUT~
pllena => ~NO_FANOUT~
clkswitch => ~NO_FANOUT~
areset => ~NO_FANOUT~
pfdena => ~NO_FANOUT~
clkena[0] => ~NO_FANOUT~
clkena[1] => ~NO_FANOUT~
clkena[2] => ~NO_FANOUT~
clkena[3] => ~NO_FANOUT~
clkena[4] => ~NO_FANOUT~
clkena[5] => ~NO_FANOUT~
extclkena[0] => ~NO_FANOUT~
extclkena[1] => ~NO_FANOUT~
extclkena[2] => ~NO_FANOUT~
extclkena[3] => ~NO_FANOUT~
scanclk => ~NO_FANOUT~
scanclkena => ~NO_FANOUT~
scanaclr => ~NO_FANOUT~
scanread => ~NO_FANOUT~
scanwrite => ~NO_FANOUT~
scandata => ~NO_FANOUT~
phasecounterselect[0] => ~NO_FANOUT~
phasecounterselect[1] => ~NO_FANOUT~
phasecounterselect[2] => ~NO_FANOUT~
phasecounterselect[3] => ~NO_FANOUT~
phaseupdown => ~NO_FANOUT~
phasestep => ~NO_FANOUT~
configupdate => ~NO_FANOUT~
fbmimicbidir <> <GND>
clk[0] <= clk[0].DB_MAX_OUTPUT_PORT_TYPE
clk[1] <= clk[1].DB_MAX_OUTPUT_PORT_TYPE
clk[2] <= clk[2].DB_MAX_OUTPUT_PORT_TYPE
clk[3] <= clk[3].DB_MAX_OUTPUT_PORT_TYPE
clk[4] <= clk[4].DB_MAX_OUTPUT_PORT_TYPE
extclk[0] <= <GND>
extclk[1] <= <GND>
extclk[2] <= <GND>
extclk[3] <= <GND>
clkbad[0] <= <GND>
clkbad[1] <= <GND>
enable1 <= <GND>
enable0 <= <GND>
activeclock <= <GND>
clkloss <= <GND>
locked <= <GND>
scandataout <= <GND>
scandone <= <GND>
sclkout0 <= <GND>
sclkout1 <= <GND>
phasedone <= <GND>
vcooverrange <= <GND>
vcounderrange <= <GND>
fbout <= <GND>
fref <= <GND>
icdrclk <= <GND>


|spi_test|spi_PLL:inst14|altpll:altpll_component|spi_PLL_altpll:auto_generated
clk[0] <= pll1.CLK
clk[1] <= pll1.CLK1
clk[2] <= pll1.CLK2
clk[3] <= pll1.CLK3
clk[4] <= pll1.CLK4
inclk[0] => pll1.CLK
inclk[1] => pll1.CLK1


|spi_test|adc_controller:inst11
CLK => rising_state[0].CLK
CLK => rising_state[1].CLK
CLK => rising_state[2].CLK
CLK => rising_state[3].CLK
CLK => rising_state[4].CLK
CLK => rising_state[5].CLK
CLK => rising_state[6].CLK
CLK => rising_state[7].CLK
CLK => rising_state[8].CLK
CLK => rising_state[9].CLK
CLK => rising_state[10].CLK
CLK => rising_state[11].CLK
CLK => rising_state[12].CLK
CLK => rising_state[13].CLK
CLK => rising_state[14].CLK
CLK => rising_state[15].CLK
CLK => rising_state[16].CLK
CLK => rising_state[17].CLK
CLK => rising_state[18].CLK
CLK => rising_state[19].CLK
CLK => rising_state[20].CLK
CLK => rising_state[21].CLK
CLK => rising_state[22].CLK
CLK => rising_state[23].CLK
CLK => rising_state[24].CLK
CLK => rising_state[25].CLK
CLK => rising_state[26].CLK
CLK => rising_state[27].CLK
CLK => rising_state[28].CLK
CLK => rising_state[29].CLK
CLK => rising_state[30].CLK
CLK => rising_state[31].CLK
CLK => SCLK.DATAIN
CLK => falling_state[0].CLK
CLK => falling_state[1].CLK
CLK => falling_state[2].CLK
CLK => falling_state[3].CLK
CLK => falling_state[4].CLK
CLK => falling_state[5].CLK
CLK => falling_state[6].CLK
CLK => falling_state[7].CLK
CLK => falling_state[8].CLK
CLK => falling_state[9].CLK
CLK => falling_state[10].CLK
CLK => falling_state[11].CLK
CLK => falling_state[12].CLK
CLK => falling_state[13].CLK
CLK => falling_state[14].CLK
CLK => falling_state[15].CLK
CLK => falling_state[16].CLK
CLK => falling_state[17].CLK
CLK => falling_state[18].CLK
CLK => falling_state[19].CLK
CLK => falling_state[20].CLK
CLK => falling_state[21].CLK
CLK => falling_state[22].CLK
CLK => falling_state[23].CLK
CLK => falling_state[24].CLK
CLK => falling_state[25].CLK
CLK => falling_state[26].CLK
CLK => falling_state[27].CLK
CLK => falling_state[28].CLK
CLK => falling_state[29].CLK
CLK => falling_state[30].CLK
CLK => falling_state[31].CLK
EN => falling_state[0].PRESET
EN => falling_state[1].PRESET
EN => falling_state[2].PRESET
EN => falling_state[3].PRESET
EN => falling_state[4].PRESET
EN => falling_state[5].PRESET
EN => falling_state[6].PRESET
EN => falling_state[7].PRESET
EN => falling_state[8].PRESET
EN => falling_state[9].PRESET
EN => falling_state[10].PRESET
EN => falling_state[11].PRESET
EN => falling_state[12].PRESET
EN => falling_state[13].PRESET
EN => falling_state[14].PRESET
EN => falling_state[15].PRESET
EN => falling_state[16].PRESET
EN => falling_state[17].PRESET
EN => falling_state[18].PRESET
EN => falling_state[19].PRESET
EN => falling_state[20].PRESET
EN => falling_state[21].PRESET
EN => falling_state[22].PRESET
EN => falling_state[23].PRESET
EN => falling_state[24].PRESET
EN => falling_state[25].PRESET
EN => falling_state[26].PRESET
EN => falling_state[27].PRESET
EN => falling_state[28].PRESET
EN => falling_state[29].PRESET
EN => falling_state[30].PRESET
EN => falling_state[31].PRESET
EN => rising_state[0].PRESET
EN => rising_state[1].PRESET
EN => rising_state[2].PRESET
EN => rising_state[3].PRESET
EN => rising_state[4].PRESET
EN => rising_state[5].PRESET
EN => rising_state[6].PRESET
EN => rising_state[7].PRESET
EN => rising_state[8].PRESET
EN => rising_state[9].PRESET
EN => rising_state[10].PRESET
EN => rising_state[11].PRESET
EN => rising_state[12].PRESET
EN => rising_state[13].PRESET
EN => rising_state[14].PRESET
EN => rising_state[15].PRESET
EN => rising_state[16].PRESET
EN => rising_state[17].PRESET
EN => rising_state[18].PRESET
EN => rising_state[19].PRESET
EN => rising_state[20].PRESET
EN => rising_state[21].PRESET
EN => rising_state[22].PRESET
EN => rising_state[23].PRESET
EN => rising_state[24].PRESET
EN => rising_state[25].PRESET
EN => rising_state[26].PRESET
EN => rising_state[27].PRESET
EN => rising_state[28].PRESET
EN => rising_state[29].PRESET
EN => rising_state[30].PRESET
EN => rising_state[31].PRESET
ADC_IN_DATA => ADC_OUT_DATA[0]$latch.DATAIN
ADC_IN_DATA => out_buf[0].DATAIN
ADC_IN_DATA => out_buf[1].DATAIN
ADC_IN_DATA => out_buf[2].DATAIN
ADC_IN_DATA => out_buf[3].DATAIN
ADC_IN_DATA => out_buf[4].DATAIN
ADC_IN_DATA => out_buf[5].DATAIN
ADC_IN_DATA => out_buf[6].DATAIN
ADC_IN_DATA => out_buf[7].DATAIN
ADC_IN_DATA => out_buf[8].DATAIN
ADC_IN_DATA => out_buf[9].DATAIN
ADC_IN_DATA => out_buf[10].DATAIN
SCLK <= CLK.DB_MAX_OUTPUT_PORT_TYPE
CS_N <= CS_N$latch.DB_MAX_OUTPUT_PORT_TYPE
SADDR <= SADDR$latch.DB_MAX_OUTPUT_PORT_TYPE
DATA_READY <= DATA_READY$latch.DB_MAX_OUTPUT_PORT_TYPE
ADC_OUT_DATA[0] <= ADC_OUT_DATA[0]$latch.DB_MAX_OUTPUT_PORT_TYPE
ADC_OUT_DATA[1] <= ADC_OUT_DATA[1]$latch.DB_MAX_OUTPUT_PORT_TYPE
ADC_OUT_DATA[2] <= ADC_OUT_DATA[2]$latch.DB_MAX_OUTPUT_PORT_TYPE
ADC_OUT_DATA[3] <= ADC_OUT_DATA[3]$latch.DB_MAX_OUTPUT_PORT_TYPE
ADC_OUT_DATA[4] <= ADC_OUT_DATA[4]$latch.DB_MAX_OUTPUT_PORT_TYPE
ADC_OUT_DATA[5] <= ADC_OUT_DATA[5]$latch.DB_MAX_OUTPUT_PORT_TYPE
ADC_OUT_DATA[6] <= ADC_OUT_DATA[6]$latch.DB_MAX_OUTPUT_PORT_TYPE
ADC_OUT_DATA[7] <= ADC_OUT_DATA[7]$latch.DB_MAX_OUTPUT_PORT_TYPE
ADC_OUT_DATA[8] <= ADC_OUT_DATA[8]$latch.DB_MAX_OUTPUT_PORT_TYPE
ADC_OUT_DATA[9] <= ADC_OUT_DATA[9]$latch.DB_MAX_OUTPUT_PORT_TYPE
ADC_OUT_DATA[10] <= ADC_OUT_DATA[10]$latch.DB_MAX_OUTPUT_PORT_TYPE
ADC_OUT_DATA[11] <= ADC_OUT_DATA[11]$latch.DB_MAX_OUTPUT_PORT_TYPE


|spi_test|fifo_controller:inst17
CLK => SCLK.DATAIN
CLK => FIFO_READ_REQ~reg0.CLK
CLK => FIFO_WRITE_REQ~reg0.CLK
CLK => FIFO_CLR~reg0.CLK
CLR => FIFO_CLR~reg0.DATAIN
CLR => FIFO_READ_REQ~reg0.ENA
CLR => FIFO_WRITE_REQ~reg0.ENA
DATA_WRITE[0] => FIFO_WRITE[0].DATAIN
DATA_WRITE[1] => FIFO_WRITE[1].DATAIN
DATA_WRITE[2] => FIFO_WRITE[2].DATAIN
DATA_READ[0] => FIFO_READ[0].DATAIN
DATA_READ[1] => FIFO_READ[1].DATAIN
DATA_READ[2] => FIFO_READ[2].DATAIN
FULL => process_0.IN0
EMPTY => process_0.IN0
WORDS_USED[0] => SPACE_AVAILABLE[0].DATAIN
WORDS_USED[1] => SPACE_AVAILABLE[1].DATAIN
WORDS_USED[2] => SPACE_AVAILABLE[2].DATAIN
READ_REQ => process_0.IN1
WRITE_REQ => process_0.IN1
SCLK <= CLK.DB_MAX_OUTPUT_PORT_TYPE
FIFO_WRITE[0] <= DATA_WRITE[0].DB_MAX_OUTPUT_PORT_TYPE
FIFO_WRITE[1] <= DATA_WRITE[1].DB_MAX_OUTPUT_PORT_TYPE
FIFO_WRITE[2] <= DATA_WRITE[2].DB_MAX_OUTPUT_PORT_TYPE
FIFO_READ[0] <= DATA_READ[0].DB_MAX_OUTPUT_PORT_TYPE
FIFO_READ[1] <= DATA_READ[1].DB_MAX_OUTPUT_PORT_TYPE
FIFO_READ[2] <= DATA_READ[2].DB_MAX_OUTPUT_PORT_TYPE
FIFO_CLR <= FIFO_CLR~reg0.DB_MAX_OUTPUT_PORT_TYPE
FIFO_WRITE_REQ <= FIFO_WRITE_REQ~reg0.DB_MAX_OUTPUT_PORT_TYPE
FIFO_READ_REQ <= FIFO_READ_REQ~reg0.DB_MAX_OUTPUT_PORT_TYPE
SPACE_AVAILABLE[0] <= WORDS_USED[0].DB_MAX_OUTPUT_PORT_TYPE
SPACE_AVAILABLE[1] <= WORDS_USED[1].DB_MAX_OUTPUT_PORT_TYPE
SPACE_AVAILABLE[2] <= WORDS_USED[2].DB_MAX_OUTPUT_PORT_TYPE


|spi_test|SCFIFO:inst18
data[0] => scfifo_dq71:auto_generated.data[0]
data[1] => scfifo_dq71:auto_generated.data[1]
data[2] => scfifo_dq71:auto_generated.data[2]
q[0] <= scfifo_dq71:auto_generated.q[0]
q[1] <= scfifo_dq71:auto_generated.q[1]
q[2] <= scfifo_dq71:auto_generated.q[2]
wrreq => scfifo_dq71:auto_generated.wrreq
rdreq => scfifo_dq71:auto_generated.rdreq
clock => scfifo_dq71:auto_generated.clock
aclr => scfifo_dq71:auto_generated.aclr
sclr => scfifo_dq71:auto_generated.sclr
eccstatus[0] <= <UNC>
eccstatus[1] <= <UNC>
empty <= scfifo_dq71:auto_generated.empty
full <= scfifo_dq71:auto_generated.full
almost_full <= scfifo_dq71:auto_generated.almost_full
almost_empty <= scfifo_dq71:auto_generated.almost_empty
usedw[0] <= scfifo_dq71:auto_generated.usedw[0]
usedw[1] <= scfifo_dq71:auto_generated.usedw[1]
usedw[2] <= scfifo_dq71:auto_generated.usedw[2]


|spi_test|SCFIFO:inst18|scfifo_dq71:auto_generated
aclr => ~NO_FANOUT~
almost_empty <= almost_empty.DB_MAX_OUTPUT_PORT_TYPE
almost_full <= dffe_af.DB_MAX_OUTPUT_PORT_TYPE
clock => a_dpfifo_0dt:dpfifo.clock
clock => dffe_af.CLK
clock => dffe_nae.CLK
data[0] => a_dpfifo_0dt:dpfifo.data[0]
data[1] => a_dpfifo_0dt:dpfifo.data[1]
data[2] => a_dpfifo_0dt:dpfifo.data[2]
empty <= a_dpfifo_0dt:dpfifo.empty
full <= a_dpfifo_0dt:dpfifo.full
q[0] <= a_dpfifo_0dt:dpfifo.q[0]
q[1] <= a_dpfifo_0dt:dpfifo.q[1]
q[2] <= a_dpfifo_0dt:dpfifo.q[2]
rdreq => a_dpfifo_0dt:dpfifo.rreq
rdreq => _.IN1
rdreq => _.IN0
rdreq => _.IN1
rdreq => _.IN0
sclr => a_dpfifo_0dt:dpfifo.sclr
sclr => _.IN0
sclr => _.IN0
sclr => _.IN0
sclr => _.IN0
usedw[0] <= a_dpfifo_0dt:dpfifo.usedw[0]
usedw[1] <= a_dpfifo_0dt:dpfifo.usedw[1]
usedw[2] <= a_dpfifo_0dt:dpfifo.usedw[2]
wrreq => a_dpfifo_0dt:dpfifo.wreq
wrreq => _.IN0
wrreq => _.IN1
wrreq => _.IN0
wrreq => _.IN1


|spi_test|SCFIFO:inst18|scfifo_dq71:auto_generated|a_dpfifo_0dt:dpfifo
clock => a_fefifo_m4f:fifo_state.clock
clock => altsyncram_udm1:FIFOram.clock0
clock => altsyncram_udm1:FIFOram.clock1
clock => cntr_unb:rd_ptr_count.clock
clock => cntr_unb:wr_ptr.clock
data[0] => altsyncram_udm1:FIFOram.data_a[0]
data[1] => altsyncram_udm1:FIFOram.data_a[1]
data[2] => altsyncram_udm1:FIFOram.data_a[2]
empty <= a_fefifo_m4f:fifo_state.empty
full <= a_fefifo_m4f:fifo_state.full
q[0] <= altsyncram_udm1:FIFOram.q_b[0]
q[1] <= altsyncram_udm1:FIFOram.q_b[1]
q[2] <= altsyncram_udm1:FIFOram.q_b[2]
rreq => a_fefifo_m4f:fifo_state.rreq
rreq => valid_rreq.IN0
sclr => a_fefifo_m4f:fifo_state.sclr
sclr => _.IN0
sclr => _.IN1
sclr => cntr_unb:rd_ptr_count.sclr
sclr => cntr_unb:wr_ptr.sclr
usedw[0] <= a_fefifo_m4f:fifo_state.usedw_out[0]
usedw[1] <= a_fefifo_m4f:fifo_state.usedw_out[1]
usedw[2] <= a_fefifo_m4f:fifo_state.usedw_out[2]
wreq => a_fefifo_m4f:fifo_state.wreq
wreq => valid_wreq.IN0


|spi_test|SCFIFO:inst18|scfifo_dq71:auto_generated|a_dpfifo_0dt:dpfifo|a_fefifo_m4f:fifo_state
aclr => b_full.IN0
aclr => b_non_empty.IN0
aclr => cntr_ao7:count_usedw.aclr
clock => cntr_ao7:count_usedw.clock
clock => b_full.CLK
clock => b_non_empty.CLK
empty <= empty.DB_MAX_OUTPUT_PORT_TYPE
full <= b_full.DB_MAX_OUTPUT_PORT_TYPE
rreq => _.IN1
rreq => _.IN0
rreq => _.IN1
rreq => valid_rreq.IN0
sclr => _.IN0
sclr => _.IN0
sclr => _.IN1
sclr => _.IN0
sclr => _.IN0
sclr => cntr_ao7:count_usedw.sclr
usedw_out[0] <= usedw[0].DB_MAX_OUTPUT_PORT_TYPE
usedw_out[1] <= usedw[1].DB_MAX_OUTPUT_PORT_TYPE
usedw_out[2] <= usedw[2].DB_MAX_OUTPUT_PORT_TYPE
wreq => _.IN1
wreq => _.IN1
wreq => _.IN0
wreq => valid_wreq.IN0


|spi_test|SCFIFO:inst18|scfifo_dq71:auto_generated|a_dpfifo_0dt:dpfifo|a_fefifo_m4f:fifo_state|cntr_ao7:count_usedw
aclr => counter_reg_bit[2].IN0
clock => counter_reg_bit[2].CLK
clock => counter_reg_bit[1].CLK
clock => counter_reg_bit[0].CLK
cnt_en => _.IN1
q[0] <= counter_reg_bit[0].DB_MAX_OUTPUT_PORT_TYPE
q[1] <= counter_reg_bit[1].DB_MAX_OUTPUT_PORT_TYPE
q[2] <= counter_reg_bit[2].DB_MAX_OUTPUT_PORT_TYPE
sclr => _.IN0
sclr => _.IN0
sclr => _.IN0
updown => counter_comb_bita0.DATAB
updown => counter_comb_bita1.DATAB
updown => counter_comb_bita2.DATAB


|spi_test|SCFIFO:inst18|scfifo_dq71:auto_generated|a_dpfifo_0dt:dpfifo|altsyncram_udm1:FIFOram
address_a[0] => ram_block1a0.PORTAADDR
address_a[0] => ram_block1a1.PORTAADDR
address_a[0] => ram_block1a2.PORTAADDR
address_a[1] => ram_block1a0.PORTAADDR1
address_a[1] => ram_block1a1.PORTAADDR1
address_a[1] => ram_block1a2.PORTAADDR1
address_a[2] => ram_block1a0.PORTAADDR2
address_a[2] => ram_block1a1.PORTAADDR2
address_a[2] => ram_block1a2.PORTAADDR2
address_b[0] => ram_block1a0.PORTBADDR
address_b[0] => ram_block1a1.PORTBADDR
address_b[0] => ram_block1a2.PORTBADDR
address_b[1] => ram_block1a0.PORTBADDR1
address_b[1] => ram_block1a1.PORTBADDR1
address_b[1] => ram_block1a2.PORTBADDR1
address_b[2] => ram_block1a0.PORTBADDR2
address_b[2] => ram_block1a1.PORTBADDR2
address_b[2] => ram_block1a2.PORTBADDR2
clock0 => ram_block1a0.CLK0
clock0 => ram_block1a1.CLK0
clock0 => ram_block1a2.CLK0
clock1 => ram_block1a0.CLK1
clock1 => ram_block1a1.CLK1
clock1 => ram_block1a2.CLK1
clocken1 => ram_block1a0.ENA1
clocken1 => ram_block1a1.ENA1
clocken1 => ram_block1a2.ENA1
data_a[0] => ram_block1a0.PORTADATAIN
data_a[1] => ram_block1a1.PORTADATAIN
data_a[2] => ram_block1a2.PORTADATAIN
q_b[0] <= ram_block1a0.PORTBDATAOUT
q_b[1] <= ram_block1a1.PORTBDATAOUT
q_b[2] <= ram_block1a2.PORTBDATAOUT
wren_a => ram_block1a0.PORTAWE
wren_a => ram_block1a1.PORTAWE
wren_a => ram_block1a2.PORTAWE


|spi_test|SCFIFO:inst18|scfifo_dq71:auto_generated|a_dpfifo_0dt:dpfifo|cntr_unb:rd_ptr_count
aclr => counter_reg_bit[2].IN0
clock => counter_reg_bit[2].CLK
clock => counter_reg_bit[1].CLK
clock => counter_reg_bit[0].CLK
cnt_en => _.IN1
q[0] <= counter_reg_bit[0].DB_MAX_OUTPUT_PORT_TYPE
q[1] <= counter_reg_bit[1].DB_MAX_OUTPUT_PORT_TYPE
q[2] <= counter_reg_bit[2].DB_MAX_OUTPUT_PORT_TYPE
sclr => _.IN0
sclr => _.IN0
sclr => _.IN0


|spi_test|SCFIFO:inst18|scfifo_dq71:auto_generated|a_dpfifo_0dt:dpfifo|cntr_unb:wr_ptr
aclr => counter_reg_bit[2].IN0
clock => counter_reg_bit[2].CLK
clock => counter_reg_bit[1].CLK
clock => counter_reg_bit[0].CLK
cnt_en => _.IN1
q[0] <= counter_reg_bit[0].DB_MAX_OUTPUT_PORT_TYPE
q[1] <= counter_reg_bit[1].DB_MAX_OUTPUT_PORT_TYPE
q[2] <= counter_reg_bit[2].DB_MAX_OUTPUT_PORT_TYPE
sclr => _.IN0
sclr => _.IN0
sclr => _.IN0


